@DATABASE iGame.guide
@$VER: iGame.guide 2.0b6 (04.09.2020)
@INDEX "Index"
@wordwrap

@NODE "Main" "iGame documentation"
@{jcenter}
iGame
=============================================
(c) 2005-2020 Emmanuel Vasilakis
@{jleft}
@{lindent 3}
@{" Introduction    " LINK "INTR" 0} - About iGame
@{" History         " LINK "HIST" 0} - History of iGame
@{" Building iGame  " LINK "BUIL" 0} - Building iGame
@{" Requirements    " LINK "REQS" 0} - System requirements

@{" Installation    " LINK "INST" 0} - How to install iGame
@{" Usage           " LINK "USAG" 0} - Using iGame

@{" Todo & Bugs     " LINK "TODO" 0} - Todo and known bugs
@{" Author          " LINK "INFO" 0} - Author contact info
@{" Changelog       " LINK "CHNG" 0} - Version changelog

@ENDNODE
@NODE "INTR" "Introduction"
@{lindent 3}
iGame is a frontend application for your games and demos collection. It runs on AmigaOS 2.04 and above, AmigaOS 4 and MorphOS.

@{b}Features@{ub}

 - Multiple WHDLoad slaves repositories on hard disk partitions
 - On demand scanning in repositories for installed WHDLoad slaves (games, demos etc.)
 - Use games' tooltypes on run
 - Shows game screenshots (screenshot window can be altered through tooltypes, uses datatypes to load foreign  formats)
 - Categorization of the games and filtering
 - Manual addition of non-WHDLoad games, demos etc.
 - Simple statistics
 - Find-as-you-type search filter

iGame can "discover" your games on pre-defined repositories and create a small database. You can then categorize each game according to it's genre, provide a small image to be displayed when the game is selected and quickly find the one you're looking for using the Filter gadget.

But iGame can support more than just WHDLoad games or demos. You can add and launch any type of executable, though it mostly makes sense if it's a game ;-)

iGame was initially developed on an Amiga 3000 with a CSMKII 68060 with 128MB RAM, using the Cubic IDE (gcc). Nowadays, I'm using Emacs on linux and vbcc as a cross compiler.

iGame is open source and free software, licensed under the GPL.

https://github.com/MrZammler/iGame
http://winterland.no-ip.org/igame/index.html

@ENDNODE
@NODE "HIST" "History"
@{lindent 3}
And a bit of history:

iGame started in ~2004/5 as a way to learn a bit of MUI and general Amiga system coding. Through the years it's been updated with various new small features and bug fixes. After version 1.5, iGame was updated with internal version 1.6 which was never really officially released. Sorry; I wasn't very good at releasing versions or keeping a changelog.

Since then Dimitris Panokostas, George Sokianos, Chris Charabaruk and T0lk13n did a lot of re-writing and new features (such as the settings window to replace tooltypes). These versions are now tagged as 2.0 betas.

@ENDNODE
@NODE "BUIL" "Building iGame"
@{lindent 3}
iGame is open source and free software, licensed under the GPLv3. This means you can have access to the source and compile it yourself. How to do it is described at the following URL, were various Operating Systems are covered.

https://github.com/MrZammler/iGame/wiki/Compiling-iGame

@ENDNODE

@NODE "REQS" "Requirements"
@{lindent 3}
@{b}Hardware requirements@{ub}

@{u}Minimum requirements@{uu}

 - Amiga Computer (obviously)
 - 68000 processor
 - 2MB Fast Ram

@{u}Recommended requirements@{uu}

 - Amiga Computer (obviously)
 - 68030 processor
 - 16MB Fast Ram

Depending of the number of WHDLoad slaves (games, demos etc.) more available memory might be required.

On a 68030 processor, it takes a while to scan and list the games. It takes about 2 minutes for a complete scan of 2000 games (~3G data) on a SFS formatted partition.

On a 68060 processor with ~200 games, scanning takes ~30 secs and listing/sorting less than 1 sec.

@{b}Software requirements@{ub}

iGame uses Magic User Interface (MUI) and some third party libraries. Depending your configuration the software requirements might change. In any case iGame will inform you about the missing required libraries if you run it from the shell.

All the required software can be found on Aminet.

@{u}Minimum requirements@{uu}

 - Kickstart 2.04 or higher
 - Workbench 2.1 or higher
 - MUI 3.8 or higher
 - guigfx.library
 - render.library
 - guigfx.mcc
 - Texteditor.mcc

If your Amiga has a 68000 CPU make sure that the libraries you have installed support it, i.e. there is a different MCC_TextEditor package for this processor. The same applies on CPUs that do not have FPU.

The @{b}AmigaOS 4 version@{ub} should work fine on any AmigaOS 4.0 update 6 release and above. It might work on previous versions, but it is not tested.

The @{b}MorphOS version@{ub} should work fine on any MorphOS 3.x release.
@ENDNODE

@NODE "INST" "Installation"
@{lindent 3}
@{b}Installer@{ub}

In iGame archive you will find an installation script, which you can use to install iGame on your hard disk. The installer recognizes the OS version and the available CPU, and proposes the best binary for you, but at the end you can choose exactly what you want to use.

Have in mind that the installer will not install any of the needed third party libraries. These must be installed by yourself.

@{b}Manual Installation@{ub}

You can install iGame manually if you prefer. To do that, you need to follow the following steps:

@{lindent 8}
1. Unpack the archive wherever you want.
2. Copy iGame drawer anywhere on your hard disk.
3. There are different executables of iGame based on CPU and Operating System. You need to find the one that is for your system and rename it as iGame.
@{tab}These are:
@{tab}iGame for 68000/68010/68020 CPUs
@{tab}iGame.030 for 68030 CPU
@{tab}iGame.040 for 68040 CPU
@{tab}iGame.060 for 68060 CPU
@{tab}iGame.OS4 for AmigaOS 4 and PPC CPUs
@{tab}iGame.MOS for MorphOS and PPC CPUs
4. Make sure igame.iff file is in the same directory as the binary.
5. Install required libs and MCCs suitable for your system.
6. Run iGame!

@{lindent 3}
iGame saves it's support files in it's own folder (PROGDIR:), so we recommend you to put it on it's own separated directory.

If you upgrade from a previous release, the only thing you need to do is to copy the new executable over the previous one. Make sure to keep the igame.prefs, gameslist.csv, genres and repos.prefs files!

@{b}-- NOTE:@{ub}

Make sure that render.library and guigfx.library are supported by your system and processor. If iGame fails with a Guru Meditation 8000000B or similar on startup, double check the libraries.

If it still persists, check http://winterland.no-ip.org/igame/files.html, where you will find an archive of these 2 libraries for systems with 020/no fpu (thanks to Jools 'buzz' Smyth for providing them!). These libraries might fix issues on 68030/882 systems.

If the problem is not gone, add the NOGUIGFX tooltype to iGame. This option will use MUI's internal datatypes loading routines (dtpic.mui) instead of guigfx.mcc's. In this case though, there will be no scaling of the used screenshots. This means that all the screenshots should have the same height and width, so to keep the GUI consistent.

@ENDNODE
@NODE "USAG" "Using iGame"
@{lindent 3}
If you are new to iGame and you would like a "fast first steps" guide then we recommend you to follow the next bullets:

- Select from the menu the "Settings > Game Repositories"
- Add to the list the folders were you keep your WHDLoad games
- Click the "Close" button
- Select from the menu the "Actions > Scan Repositories"
- As soon as the list appears double click on the game you want to play for this to start.

That's all. This is so simple.

But if you want to have more details for all the available Menus and Windows, visit the following sections.

@{" Menus                    " LINK "MENUS" 0}
@{" Main Window              " LINK "WINMAIN" 0}
@{" Add a Game Window        " LINK "WINADDG" 0}
@{" Settings Window          " LINK "WINSETS" 0}
@{" Game Repositories Window " LINK "WINREPO" 0}
@{" Properties Window        " LINK "WINPROP" 0}
@{" Icon Tooltypes           " LINK "ICNTLTP" 0}

@ENDNODE
@NODE "MENUS" "Menus"
@{lindent 3}
@{b}Actions@{ub}
@{lindent 6}
@{u}Scan Repositories@{uu}
When you select "Scan Repositories", iGame will scan the paths you added at the @{" Game Repositories " LINK "WINREPO" 0} window and will try to find your available WHDLoad games or demos. This method supports ONLY WHDLoad games and demos. iGame checks the .slave files, and based on them creates a list of games and demos, which are later shown in the @{" Main Window " LINK "WINMAIN" 0}.

@{u}Add Game...@{uu}
This menu opens the @{" Add a Game " LINK "WINADDG" 0} window, which helps you add games/demos or any other executable you want into iGame list. You can also categorize it.

@{u}Show/Hide hidden entries@{uu}
This menu item hides all the games from the list and shows only the hidden games. Filter field at the top and the Genres list is disabled.

@{u}About...@{uu}
This menu item show information about the application, the version and date of release and the target CPU. Also, you will find contact information of the developer and contributors.

@{u}Quit@{uu}
This menu item closes iGame.

@{lindent 3}
@{b}Game@{ub}
@{lindent 6}
@{u}Properties...@{uu}
This menu opens the @{" Properties " LINK "WINPROP" 0} window, where you can set more information for the selected entry, like the category, set it as favorite etc.. If no entry is selected an error message is shown.

@{u}Open Game Dir@{uu}
When you select "Open Game Dir", iGame will open a window on Workbench from the selected entry. This is useful when you need to check a manual or a guide that comes along with the game or demo.

@{lindent 3}
@{lindent 6}
@{u}Settings...@{uu}
This menu opens the @{" Settings " LINK "WINSETS" 0} window, where you can make some configuration on how iGame will work, like the size of the screenshot etc..

@{u}Game Repositories...@{uu}
This menu opens the @{" Game Repositories " LINK "WINREPO" 0} window, where you can add/remove paths from your hard disk, where you have stored your games or demos. These paths are useful for iGame only if they contain WHDLoad games/demos, and they are used to automatically recognize and build a list of them. If you do any changes you have to rescan the Game Repositories using the menu "Actions > Scan Repositories".

@{u}MUI Setting...@{uu}
This menu opens the MUI Settings window, where you can change the look of MUI components for iGame.

@ENDNODE
@NODE "WINMAIN" "Main Window"
@{lindent 3}
The Main Window is what you see when you start iGame. It is pretty simple to use and it has only a few fields.

At the top there is the "Filter" field which is used to filter the list of entries, based on what you write there. iGame returns entries that have as a part in their name the inserted text. For example if you want to find all the games that have "Soccer" in their name, that what you need to write. The search is not case sensitive, so it doesn't matter if the part of the name is capitalized or not. From the iGame settings you can set when the search is initialized, while you type or when you press "Enter".

At the left side there is the list, where all the entries (games, demos etc.) are shown. With double click on an entry it is executed. If you want to add some information on an entry using the "Game > Properties..." menu, that's where you have to select it.

At the top right side there is a screenshot of the selected entry. For the screenshot iGame uses an image file, which must be in the same folder with the game/demo, named @{b}igame.iff@{ub}. If no screenshot is available then the game icon is shown. If no icon is available, then a generic image is shown. You can disable the screenshots from the @{" Settings Window " LINK "WINSETS" 0} or the @{" Icon Tooltypes " LINK "ICNTLTP" 0}.

Under the screenshot there is the "Genres" list which help you filter the games based on the Genre, as well as by "Last played", "Favorites", "Most Played" and "Never Played". There is also an "Unknown" selection which shows the entries that do not have any Genre assigned.

At the bottom there is a read only field which shows information about iGame, based on what you are doing. It is like a status bar, where useful information will be shown while you use iGame.

@ENDNODE
@NODE "WINADDG" "Add a Game Window..."
@{lindent 3}
This window opens from the menu "Actions > Add a Game". This is useful in cases you want to add a WDHLoad game/demo or any other game/demo which can be started from Workbench/Shell. Depending of the AmigaOS version it uses compatible methods to run the executable.

From this window you can set the "Title" of the game/demo, select the path on HD of the executable and set it's "Genre".

Click on OK if you are fine with your selections, so that this new entry will be saved on the list. Click on "Cancel" if you changed your mind.

@ENDNODE
@NODE "WINREPO" "Game Repositories Window..."
@{lindent 3}
This window opens from the menu item "Settings > Game Repositories". From it you can add your hard disk paths where you have your WHDLoad games stored. These paths are going to be scanned when you select the menu item "Actions > Scan Repositories".

This window has a file field at the top. Click on the folder button to select the path from your hard disk, and then click button list to add it at the list below. If you want to remove a path, select it from the list and click the "Remove" button at the bottom of the window.

When you finish the changes on the repositories list, click "Close" button to close it. Remember that no changes on your game list will happen if you do not scan the repositories, using the menu item "Actions > Scan Repositories".

@ENDNODE
@NODE "WINPROP" "Properties Window..."
@{lindent 3}
This window opens from the menu item "Game > Properties". To work you have to have a game/demo selected from the games list, otherwise an error message will show up. From this window you can change all the properties of a game/demo.

From the top, the first field is the game/demo title, which you can edit as well. Next you can set the Genre from the select list.

Following is a checkbox to set the game/demo as one of your favorites. To show your favorite games in the games list, select from the "Genre" list at the right side of the main window, the "--Favorites--" option.

Beside that is a checkbox to set the game/demo as hidden. This is going to be removed from the games list. To list all the hidden games/demos you have to select the menu item "Actions > Show/Hide hidden entries" from the main window.

The next field is the number of times this games was played. This is a read only field and you cant make any changes on it.

The full path of the slave file, in case this is a WHDLoad game/demo, or the full path of the executable of any game/demo as set from the "Actions > Add a Game", is show at the next field. This is also a read only field and you cannot modify it.

After that a big text area shows the game icon tooltypes. This is extremely useful in case you want to change something on the game especially if it is a WHDLoad one, were the tooltypes can change the way a game works.

@ENDNODE
@NODE "WINSETS" "Settings Window"
@{lindent 3}
The iGame settings window opens from the menu item "Settings > Settings...". These settings will override the iGame tooltypes set on iGame icon, and the changes you set here are saved on a text file named "igame.prefs", inside iGame folder. If this file is missing, iGame defaults to tooltypes again.

Settings window has three separated sections:

@{u}Screenshots@{uu}
The first checkbox here named "Hide Screenshots" disables the screenshot part of the main window. This requires a restart of iGame to be applied.

If screenshots are enabled you can select from the second checkbox if the GuiGfx library will be used. GuiGfx provides good scaling of the screenshot but it is a little bit tricky to set this up. You can find more info at @{" Installation" LINK "INST" 0} section. If this is checked iGame will not use the GuiGfx library.

After that there is a select box to choose the screenshot size. You can choose between 160x128 pixels, 320x256 pixels and custom, which let's you set the width and height from the fields below the select box.

@{u}Titles@{uu}
The first two radio buttons set the way iGame gets the WHDLoad games/demo are named, which can be based on reading the slave files or by the game/demo folder name. If you choose the "Slave Contents" option the name can be more accurate, but the scanning is slower. "Directories" option is faster, but if the slave inside a folder is not the one the directory is named, then there is a risk to have the wrong game in the list. Have in mind that if iGame finds multiple slaves for the same game, their titles will be suffixed with the 'Alt' word.

The "No Smart Spaces" disables the ability iGame to add extra spaces on game/demo title where it believes it is needed, i.e. before a version number.

@{u}Misc@{uu}
"Save stats on exit" checkbox enables the save of the statistics (i.e. times played) for each game when iGame is closed instead every time a game is double clicked. This might be preferred if you don't want to have iGame writing many times on the hard disk.

"Use enter to filter" checkbox changes the filter field on the main window to be initiated when you press the enter key. By default, as soon as you type something the filtering of the games list happens in real time. On slow machines real time filtering might be slow.

"Hide side panel" checkbox, if selected, hides the right side of the main window. This is useful if you don't need the screenshots and the filtering by the options of the "Genres" list. This requires a restart of iGame to be applied.

"Display favorites on start" checkbox, if selected, iGame starts showing the games that are marked as "Favorite". This is useful when you have a big collection of games but you would like to start with your favorites ones, to select something for fast gaming.

Pressing the "Save" button saves the settings, "Use" button applies the settings, except the ones that require to restart iGame, as mentioned above. "Cancel" button closes the window and forgets the changes you did.

@ENDNODE
@NODE "ICNTLTP" "Icon Tooltypes"
@{lindent 3}
With iGame's icon tooltypes you can define how the program will work. The options are the same as can be found at the @{"Settings Window" LINK "WINSETS" 0}, where you can find more details for each option.

@{b}NOSCREENSHOT@{ub} disables the screenshot
@{b}NOGUIGFX@{ub} makes iGame to not use the GuiGfx library
@{b}SCREENSHOT=WIDTHxHEIGHT@{ub} sets the screenshot width and height in pixels
@{b}FILTERUSEENTER@{ub} sets the filter field to be initiated with enter
@{b}SAVESTATSONEXIT@{ub} save game statistics when iGame is closed
@{b}TITLESFROMDIRS@{ub} gets the game/demo title from it's parent directory
@{b}NOSMARTSPACES@{ub} doesn't add extra spaces on title where it is needed
@{b}NOSIDEPANEL@{ub} hides the right side of the main window

@ENDNODE
@NODE "TODO" "Todo & Bugs"
@{lindent 3}
Since iGame got open source we prefer to use Github to log all the issues and the features/changes we want to develop on the application. So, if you have a suggestion or an idea, or a problem about how iGame works, please open an issue at:

https://github.com/MrZammler/iGame/issues

There is also a thread on eab that you could post suggestions/bugs:

http://eab.abime.net/showthread.php?t=28771

@ENDNODE
@NODE "INFO" "Author info"
@{lindent 3}
If you wish to contact the author of iGame, you can send an email at:
Emmanuel Vasilakis (mrzammler\@mm.st)

We would like to thank:
- Animagic and Emmanouela Panterh for designing the icons and the pics that come with iGame.
- and of course all of you who use iGame and support our beloved Amiga computer

@ENDNODE
@NODE "CHNG" "Version changelog"
@{lindent 3}
Information about all the versions and the changes of iGame can be found at the CHANGELOG.md file.

@ENDNODE
@{BODY}
